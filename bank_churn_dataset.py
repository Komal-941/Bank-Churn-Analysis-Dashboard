# -*- coding: utf-8 -*-
"""Bank Churn Dataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y0Y6dfIODl2Lx4I9JR9EMGG9I7BuvA0M

## Business Understanding

**To analyze customer data, uncover patterns contributing to churn, and provide actionable insights to improve customer loyalty and reduce churn rates**

**Importing Necessary Libraries**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.simplefilter('ignore')

"""## Load the Data"""

data = pd.read_csv(r"C:\Users\DELL\Downloads\Bank Customer Churn Prediction.csv")
data

"""## Data Exploration"""

#checking for number of rows and column - is is as per the given data
data.shape

data_info = data.info()

"""**Check Column names as per Syntax**"""

print(data.columns.tolist())

"""**Check the Data Type**"""

data.dtypes

"""**Handling Missing Values**"""

data.isnull().sum()

"""**Remove Duplicates**"""

## Checking for Duplicates

data.duplicated().sum()

data= data.drop_duplicates()

"""no duplicates Found

**Dimension Reduction**
"""

# Create a copy of the column and then replace values
data['Churn_Label'] = data['churn'].copy()
data['Churn_Label'].replace({1: 'Churned', 0: 'Un-Churned'}, inplace=True)

# Display the first few rows to verify the change
print(data[['churn', 'Churn_Label']].head())

# Create a copy of the column and then replace values
data['credit_card_holder'] = data['credit_card'].copy()
data['credit_card_holder'].replace({1: 'Yes', 0: 'No'}, inplace=True)

# Display the first few rows to verify the change
print(data[['credit_card_holder', 'credit_card']].head())

# Create a copy of the column and then replace values
data['current_user'] = data['active_member'].copy()
data['current_user'].replace({1: 'Active', 0: 'Non-Active'}, inplace=True)

# Display the first few rows to verify the change
print(data[['current_user', 'active_member']].head())

data.drop(columns=['credit_card', 'active_member', 'churn'], inplace=True)

data

"""### Descriptive statististics on variables

**Statistics Numerical Data**
"""

data.describe()

"""**Statistics Categorical Data**"""

categorical = ["gender" , "country"]

data[categorical].describe()

"""**Unique Values Count**"""

print(data['country'].value_counts())
print(data['gender'].value_counts())

"""#### Univariate Analysis

**Job Distribution by Title**
"""

data.head(2)

a  = data.groupby("country")["current_user"].value_counts() #will give the rsult after grouping & gives result for each group
a

"""**Histogram for Age Distribution**"""

data['age'].hist(bins=20)
plt.title('Age Distribution')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.show()

"""**Customer Distribution by country**"""

pd.crosstab(data['country'], data['gender']).plot(kind='bar', stacked=True  )
plt.title( 'Customer Distribution by Country')
plt.show()

data.head(1)

"""**Churn Rate Distribution**"""

data['Churn_Label'].value_counts().plot(kind='pie', autopct='%1.1f%%',  labels=['Stayed', 'Churned'])
plt.title('Churn Rate Distribution')
plt.show()

import seaborn as sns

sns.countplot(x='credit_card_holder', hue='Churn_Label', data=data)
plt.title('Churn by Credit Card Ownership')
plt.xlabel('Credit Card Ownership (0=No, 1=Yes)')
plt.show()

"""**Churn by Age Bins**"""

data['age_bins'] = pd.cut(data['age'], bins=[0, 30, 40, 50, 60, 70, 100], labels=['<30', '31-40', '41-50', '51-60', '61-70', '>70'])
sns.countplot(x='age_bins', hue='Churn_Label', data=data)
plt.title('Churn by Age Bins')
plt.show()

"""**Churn by Geography and Gender**"""

sns.catplot(x='country', hue='gender', col='Churn_Label', data=data, kind='count')
plt.suptitle('Churn by Geography and Gender', y=1.05)
plt.show()

data

"""### Saved the Cleaned Data in Excel File"""

# Save as Excel without index column
data.to_excel('cleaned_bank_data.xlsx', index=False)

"""### Will Prepare Dashboard Using Power-BI"""

